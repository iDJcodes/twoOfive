# This is where the final code will be written in, might not have much but I am doing off coding in an other 
# file(testing different methods of filtering
import sys
from random import randint 

def viewPicture(oripic):
  pict = makePicture(oripic)                # takes the image location and opens the file 
  pixel = getPixel(pict, 0, 0)              # takes pixel at 0 0 and saves it into a variable 
  pixels = getPixels(pict)                  # gets the pixel count in the picture   
  printNow ("width is"),  (getWidth(pict)), ("height is"), (getHeight(pict))         #self explainitory prints out the dimensions an option I added later but was having issues with  
  printNow ("The value of the pixel at 0, 0 is: "), (pixel)                          #print syntax
  printNow ("A different way to get the pixel at 0, 0 is: "), (pixels[0])
  explore(pict)                     #using a gui the image is output to the screen and can be explored to check pixels through mouse over

def picNegative(oripic):
  pict = makePicture(oripic)
  for px in getPixels(pict):   #loops through the photo based on the pixels count returned throguh getPixel
    red = getRed(px)           #gets the RGB number at red   
    green = getGreen(px)       #gets the RGB number at green
    blue = getBlue(px)         #gets the RGB number at blue
    negColor = makeColor(255 - red, 255 - green, 255 - blue)   #to get the inverse of the number take 255 and minus the RGB values
    setColor(px, negColor)       #the value calculated in negcolor will now be set into that specific pixel the loop is currently on 
  
  explore(pict)  
  return pict

def picGrey(oripic):
  pict = makePicture(oripic)
  for px in getPixels(pict):
    neoRed = getRed(px)*0.333       #.33 is basically 1/3
    neoGreen = getGreen(px)*0.333
    neoBlue = getBlue(px)*0.333
    lumi = neoRed+neoGreen+neoBlue    #this idea of coming up with the grey scale was not my original idea this came from the interent 
    setColor(px, makeColor(lumi,lumi,lumi))  #by adding the RGB values and dividing by 3 we can get the greyscale of that pixel
   
  explore(pict)
  return pict

def picPlay(oripic):     # the next 2 functions are play functions where I just did random things 
  pict = makePicture(oripic)
  for px in getPixels(pict):
    playRed = getRed(px)
    playGreen = getGreen(px)
    playBlue = getBlue(px)
    
    randR = randint(0,1)   #basically this loop takes a pixel and its RGB values generate a random nummber for each value and multiply 
    pRed = randR*playRed   #each of the RGB values for that pixel by that random generated numbers for each
    
    randG = randint(0,1)
    pGreen = randG*playGreen
    
    randB = randint(0,1)
    pBlue = randB*playBlue
    
    setColor(px, makeColor(pRed , pGreen, pBlue))
  explore(pict)
  return pict

def picWb(oripic):     #takes white pixels and turned into black pixels (255,255,255) ------> (0,0,0)
  pict = makePicture(oripic)
  for px in getPixels(pict):
    fRed = getRed(px)                        
    fGreen = getGreen(px)
    fBlue = getBlue(px)
    
    if fRed == 255 and fGreen == 255 and fBlue == 255:  #simple if functions to change the values of RGB with the values 255 to 0 
      setColor(px, makeColor(0, 0, 0))
    
  explore(pict)
  return pict
  
## The driver body of the code, above was functions
picture_ori = pickAFile()
printNow ("1.Explore Picture")
printNow ("2.Negative")
printNow ("3.Greyscale")
printNow ("4.Play")
printNow ("5.White to Black")

sel = raw_input("Enter Your selection: ")

if sel == '1':
  viewPicture(picture_ori)
  
elif sel == '2':
  npic = picNegative(picture_ori)
  writePictureTo(npic, r"C:\Users\Deejay\Documents\GitHub\twoOfive\Second Pro\nPict.jpg")
elif sel == '3':
  gpic = picGrey(picture_ori)
  writePictureTo(gpic, r"C:\Users\Deejay\Documents\GitHub\twoOfive\Second Pro\gPict.jpg")
elif sel == '4':
  ppic = picPlay(picture_ori)
  writePictureTo(ppic, r"C:\Users\Deejay\Documents\GitHub\twoOfive\Second Pro\pPict.jpg")
elif sel == '5':
  wbpic = picWb(picture_ori)
  writePictureTo(wbpic, r"C:\Users\Deejay\Documents\GitHub\twoOfive\Second Pro\wbPict.jpg")

else:
  printNow ("The selection You put is not apart of the choices!")


  
  




 